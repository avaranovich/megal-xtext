/*
* generated by Xtext
*/
grammar InternalMegaL;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.softlang.megal.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.softlang.megal.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.softlang.megal.services.MegaLGrammarAccess;

}

@parser::members {
 
 	private MegaLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(MegaLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getAlternatives()); }
(rule__Model__Alternatives)
{ after(grammarAccess.getModelAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMegaLDefinition
entryRuleMegaLDefinition 
:
{ before(grammarAccess.getMegaLDefinitionRule()); }
	 ruleMegaLDefinition
{ after(grammarAccess.getMegaLDefinitionRule()); } 
	 EOF 
;

// Rule MegaLDefinition
ruleMegaLDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMegaLDefinitionAccess().getGroup()); }
(rule__MegaLDefinition__Group__0)
{ after(grammarAccess.getMegaLDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleETD
entryRuleETD 
:
{ before(grammarAccess.getETDRule()); }
	 ruleETD
{ after(grammarAccess.getETDRule()); } 
	 EOF 
;

// Rule ETD
ruleETD
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getETDAccess().getGroup()); }
(rule__ETD__Group__0)
{ after(grammarAccess.getETDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRTD
entryRuleRTD 
:
{ before(grammarAccess.getRTDRule()); }
	 ruleRTD
{ after(grammarAccess.getRTDRule()); } 
	 EOF 
;

// Rule RTD
ruleRTD
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRTDAccess().getGroup()); }
(rule__RTD__Group__0)
{ after(grammarAccess.getRTDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRD
entryRuleRD 
:
{ before(grammarAccess.getRDRule()); }
	 ruleRD
{ after(grammarAccess.getRDRule()); } 
	 EOF 
;

// Rule RD
ruleRD
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRDAccess().getGroup()); }
(rule__RD__Group__0)
{ after(grammarAccess.getRDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleED
entryRuleED 
:
{ before(grammarAccess.getEDRule()); }
	 ruleED
{ after(grammarAccess.getEDRule()); } 
	 EOF 
;

// Rule ED
ruleED
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEDAccess().getGroup()); }
(rule__ED__Group__0)
{ after(grammarAccess.getEDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUseETD
entryRuleUseETD 
:
{ before(grammarAccess.getUseETDRule()); }
	 ruleUseETD
{ after(grammarAccess.getUseETDRule()); } 
	 EOF 
;

// Rule UseETD
ruleUseETD
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUseETDAccess().getAlternatives()); }
(rule__UseETD__Alternatives)
{ after(grammarAccess.getUseETDAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUseETDRef
entryRuleUseETDRef 
:
{ before(grammarAccess.getUseETDRefRule()); }
	 ruleUseETDRef
{ after(grammarAccess.getUseETDRefRule()); } 
	 EOF 
;

// Rule UseETDRef
ruleUseETDRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUseETDRefAccess().getRefAssignment()); }
(rule__UseETDRef__RefAssignment)
{ after(grammarAccess.getUseETDRefAccess().getRefAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUseEntity
entryRuleUseEntity 
:
{ before(grammarAccess.getUseEntityRule()); }
	 ruleUseEntity
{ after(grammarAccess.getUseEntityRule()); } 
	 EOF 
;

// Rule UseEntity
ruleUseEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUseEntityAccess().getGroup()); }
(rule__UseEntity__Group__0)
{ after(grammarAccess.getUseEntityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMegaLLinking
entryRuleMegaLLinking 
:
{ before(grammarAccess.getMegaLLinkingRule()); }
	 ruleMegaLLinking
{ after(grammarAccess.getMegaLLinkingRule()); } 
	 EOF 
;

// Rule MegaLLinking
ruleMegaLLinking
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMegaLLinkingAccess().getGroup()); }
(rule__MegaLLinking__Group__0)
{ after(grammarAccess.getMegaLLinkingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLD
entryRuleLD 
:
{ before(grammarAccess.getLDRule()); }
	 ruleLD
{ after(grammarAccess.getLDRule()); } 
	 EOF 
;

// Rule LD
ruleLD
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLDAccess().getGroup()); }
(rule__LD__Group__0)
{ after(grammarAccess.getLDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedID
entryRuleQualifiedID 
:
{ before(grammarAccess.getQualifiedIDRule()); }
	 ruleQualifiedID
{ after(grammarAccess.getQualifiedIDRule()); } 
	 EOF 
;

// Rule QualifiedID
ruleQualifiedID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedIDAccess().getGroup()); }
(rule__QualifiedID__Group__0)
{ after(grammarAccess.getQualifiedIDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Model__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getMegaLDefinitionParserRuleCall_0()); }
	ruleMegaLDefinition
{ after(grammarAccess.getModelAccess().getMegaLDefinitionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getModelAccess().getMegaLLinkingParserRuleCall_1()); }
	ruleMegaLLinking
{ after(grammarAccess.getModelAccess().getMegaLLinkingParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MegaLDefinition__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegaLDefinitionAccess().getImportsAssignment_3_0()); }
(rule__MegaLDefinition__ImportsAssignment_3_0)
{ after(grammarAccess.getMegaLDefinitionAccess().getImportsAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getMegaLDefinitionAccess().getEtdsAssignment_3_1()); }
(rule__MegaLDefinition__EtdsAssignment_3_1)
{ after(grammarAccess.getMegaLDefinitionAccess().getEtdsAssignment_3_1()); }
)

    |(
{ before(grammarAccess.getMegaLDefinitionAccess().getRtdsAssignment_3_2()); }
(rule__MegaLDefinition__RtdsAssignment_3_2)
{ after(grammarAccess.getMegaLDefinitionAccess().getRtdsAssignment_3_2()); }
)

    |(
{ before(grammarAccess.getMegaLDefinitionAccess().getEdsAssignment_3_3()); }
(rule__MegaLDefinition__EdsAssignment_3_3)
{ after(grammarAccess.getMegaLDefinitionAccess().getEdsAssignment_3_3()); }
)

    |(
{ before(grammarAccess.getMegaLDefinitionAccess().getRdsAssignment_3_4()); }
(rule__MegaLDefinition__RdsAssignment_3_4)
{ after(grammarAccess.getMegaLDefinitionAccess().getRdsAssignment_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UseETD__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseETDAccess().getUseETDRefParserRuleCall_0()); }
	ruleUseETDRef
{ after(grammarAccess.getUseETDAccess().getUseETDRefParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getUseETDAccess().getUseEntityParserRuleCall_1()); }
	ruleUseEntity
{ after(grammarAccess.getUseETDAccess().getUseEntityParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__MegaLDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MegaLDefinition__Group__0__Impl
	rule__MegaLDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MegaLDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegaLDefinitionAccess().getModelKeyword_0()); }

	'model' 

{ after(grammarAccess.getMegaLDefinitionAccess().getModelKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MegaLDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MegaLDefinition__Group__1__Impl
	rule__MegaLDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MegaLDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegaLDefinitionAccess().getNameAssignment_1()); }
(rule__MegaLDefinition__NameAssignment_1)
{ after(grammarAccess.getMegaLDefinitionAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MegaLDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MegaLDefinition__Group__2__Impl
	rule__MegaLDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MegaLDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegaLDefinitionAccess().getGroup_2()); }
(rule__MegaLDefinition__Group_2__0)?
{ after(grammarAccess.getMegaLDefinitionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MegaLDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MegaLDefinition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MegaLDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegaLDefinitionAccess().getAlternatives_3()); }
(rule__MegaLDefinition__Alternatives_3)*
{ after(grammarAccess.getMegaLDefinitionAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MegaLDefinition__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MegaLDefinition__Group_2__0__Impl
	rule__MegaLDefinition__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MegaLDefinition__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegaLDefinitionAccess().getLinkedKeyword_2_0()); }

	'linked' 

{ after(grammarAccess.getMegaLDefinitionAccess().getLinkedKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MegaLDefinition__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MegaLDefinition__Group_2__1__Impl
	rule__MegaLDefinition__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MegaLDefinition__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegaLDefinitionAccess().getInKeyword_2_1()); }

	'in' 

{ after(grammarAccess.getMegaLDefinitionAccess().getInKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MegaLDefinition__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MegaLDefinition__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MegaLDefinition__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegaLDefinitionAccess().getLinkerAssignment_2_2()); }
(rule__MegaLDefinition__LinkerAssignment_2_2)
{ after(grammarAccess.getMegaLDefinitionAccess().getLinkerAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getRefAssignment_1()); }
(rule__Import__RefAssignment_1)
{ after(grammarAccess.getImportAccess().getRefAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ETD__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ETD__Group__0__Impl
	rule__ETD__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ETD__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getETDAccess().getNameAssignment_0()); }
(rule__ETD__NameAssignment_0)
{ after(grammarAccess.getETDAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ETD__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ETD__Group__1__Impl
	rule__ETD__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ETD__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getETDAccess().getLessThanSignKeyword_1()); }

	'<' 

{ after(grammarAccess.getETDAccess().getLessThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ETD__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ETD__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ETD__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getETDAccess().getSupertypeAssignment_2()); }
(rule__ETD__SupertypeAssignment_2)
{ after(grammarAccess.getETDAccess().getSupertypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RTD__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RTD__Group__0__Impl
	rule__RTD__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RTD__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRTDAccess().getNameAssignment_0()); }
(rule__RTD__NameAssignment_0)
{ after(grammarAccess.getRTDAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RTD__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RTD__Group__1__Impl
	rule__RTD__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RTD__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRTDAccess().getLessThanSignKeyword_1()); }

	'<' 

{ after(grammarAccess.getRTDAccess().getLessThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RTD__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RTD__Group__2__Impl
	rule__RTD__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RTD__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRTDAccess().getDomainAssignment_2()); }
(rule__RTD__DomainAssignment_2)
{ after(grammarAccess.getRTDAccess().getDomainAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RTD__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RTD__Group__3__Impl
	rule__RTD__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RTD__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRTDAccess().getAsteriskKeyword_3()); }

	'*' 

{ after(grammarAccess.getRTDAccess().getAsteriskKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RTD__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RTD__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RTD__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRTDAccess().getCoDomainAssignment_4()); }
(rule__RTD__CoDomainAssignment_4)
{ after(grammarAccess.getRTDAccess().getCoDomainAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__RD__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RD__Group__0__Impl
	rule__RD__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RD__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRDAccess().getSourceAssignment_0()); }
(rule__RD__SourceAssignment_0)
{ after(grammarAccess.getRDAccess().getSourceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RD__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RD__Group__1__Impl
	rule__RD__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RD__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRDAccess().getRelAssignment_1()); }
(rule__RD__RelAssignment_1)
{ after(grammarAccess.getRDAccess().getRelAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RD__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RD__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RD__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRDAccess().getTargetAssignment_2()); }
(rule__RD__TargetAssignment_2)
{ after(grammarAccess.getRDAccess().getTargetAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ED__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ED__Group__0__Impl
	rule__ED__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ED__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEDAccess().getNameAssignment_0()); }
(rule__ED__NameAssignment_0)
{ after(grammarAccess.getEDAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ED__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ED__Group__1__Impl
	rule__ED__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ED__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEDAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getEDAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ED__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ED__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ED__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEDAccess().getTypeAssignment_2()); }
(rule__ED__TypeAssignment_2)
{ after(grammarAccess.getEDAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UseEntity__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseEntity__Group__0__Impl
	rule__UseEntity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEntity__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseEntityAccess().getUseEntityAction_0()); }
(

)
{ after(grammarAccess.getUseEntityAccess().getUseEntityAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UseEntity__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UseEntity__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UseEntity__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseEntityAccess().getEntityKeyword_1()); }

	'Entity' 

{ after(grammarAccess.getUseEntityAccess().getEntityKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MegaLLinking__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MegaLLinking__Group__0__Impl
	rule__MegaLLinking__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MegaLLinking__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegaLLinkingAccess().getLinkingKeyword_0()); }

	'linking' 

{ after(grammarAccess.getMegaLLinkingAccess().getLinkingKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MegaLLinking__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MegaLLinking__Group__1__Impl
	rule__MegaLLinking__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MegaLLinking__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegaLLinkingAccess().getNameAssignment_1()); }
(rule__MegaLLinking__NameAssignment_1)
{ after(grammarAccess.getMegaLLinkingAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MegaLLinking__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MegaLLinking__Group__2__Impl
	rule__MegaLLinking__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MegaLLinking__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegaLLinkingAccess().getGroup_2()); }
(rule__MegaLLinking__Group_2__0)?
{ after(grammarAccess.getMegaLLinkingAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MegaLLinking__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MegaLLinking__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MegaLLinking__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegaLLinkingAccess().getLdsAssignment_3()); }
(rule__MegaLLinking__LdsAssignment_3)*
{ after(grammarAccess.getMegaLLinkingAccess().getLdsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MegaLLinking__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MegaLLinking__Group_2__0__Impl
	rule__MegaLLinking__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MegaLLinking__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegaLLinkingAccess().getForKeyword_2_0()); }

	'for' 

{ after(grammarAccess.getMegaLLinkingAccess().getForKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MegaLLinking__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MegaLLinking__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MegaLLinking__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegaLLinkingAccess().getTargetAssignment_2_1()); }
(rule__MegaLLinking__TargetAssignment_2_1)
{ after(grammarAccess.getMegaLLinkingAccess().getTargetAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LD__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LD__Group__0__Impl
	rule__LD__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LD__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLDAccess().getTargetAssignment_0()); }
(rule__LD__TargetAssignment_0)
{ after(grammarAccess.getLDAccess().getTargetAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LD__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LD__Group__1__Impl
	rule__LD__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LD__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLDAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getLDAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LD__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LD__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LD__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLDAccess().getValueAssignment_2()); }
(rule__LD__ValueAssignment_2)
{ after(grammarAccess.getLDAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QualifiedID__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedID__Group__0__Impl
	rule__QualifiedID__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedID__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedIDAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedIDAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedID__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedID__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedID__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedIDAccess().getGroup_1()); }
(rule__QualifiedID__Group_1__0)*
{ after(grammarAccess.getQualifiedIDAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedID__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedID__Group_1__0__Impl
	rule__QualifiedID__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedID__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedIDAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedIDAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedID__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedID__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedID__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedIDAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedIDAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__MegaLDefinition__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegaLDefinitionAccess().getNameQualifiedIDParserRuleCall_1_0()); }
	ruleQualifiedID{ after(grammarAccess.getMegaLDefinitionAccess().getNameQualifiedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MegaLDefinition__LinkerAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegaLDefinitionAccess().getLinkerMegaLLinkingCrossReference_2_2_0()); }
(
{ before(grammarAccess.getMegaLDefinitionAccess().getLinkerMegaLLinkingQualifiedIDParserRuleCall_2_2_0_1()); }
	ruleQualifiedID{ after(grammarAccess.getMegaLDefinitionAccess().getLinkerMegaLLinkingQualifiedIDParserRuleCall_2_2_0_1()); }
)
{ after(grammarAccess.getMegaLDefinitionAccess().getLinkerMegaLLinkingCrossReference_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MegaLDefinition__ImportsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegaLDefinitionAccess().getImportsImportParserRuleCall_3_0_0()); }
	ruleImport{ after(grammarAccess.getMegaLDefinitionAccess().getImportsImportParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MegaLDefinition__EtdsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegaLDefinitionAccess().getEtdsETDParserRuleCall_3_1_0()); }
	ruleETD{ after(grammarAccess.getMegaLDefinitionAccess().getEtdsETDParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MegaLDefinition__RtdsAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegaLDefinitionAccess().getRtdsRTDParserRuleCall_3_2_0()); }
	ruleRTD{ after(grammarAccess.getMegaLDefinitionAccess().getRtdsRTDParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MegaLDefinition__EdsAssignment_3_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegaLDefinitionAccess().getEdsEDParserRuleCall_3_3_0()); }
	ruleED{ after(grammarAccess.getMegaLDefinitionAccess().getEdsEDParserRuleCall_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MegaLDefinition__RdsAssignment_3_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegaLDefinitionAccess().getRdsRDParserRuleCall_3_4_0()); }
	ruleRD{ after(grammarAccess.getMegaLDefinitionAccess().getRdsRDParserRuleCall_3_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__RefAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getRefMegaLDefinitionCrossReference_1_0()); }
(
{ before(grammarAccess.getImportAccess().getRefMegaLDefinitionIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getImportAccess().getRefMegaLDefinitionIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getImportAccess().getRefMegaLDefinitionCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ETD__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getETDAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getETDAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ETD__SupertypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getETDAccess().getSupertypeUseETDParserRuleCall_2_0()); }
	ruleUseETD{ after(grammarAccess.getETDAccess().getSupertypeUseETDParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RTD__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRTDAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getRTDAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RTD__DomainAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRTDAccess().getDomainUseETDParserRuleCall_2_0()); }
	ruleUseETD{ after(grammarAccess.getRTDAccess().getDomainUseETDParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RTD__CoDomainAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRTDAccess().getCoDomainUseETDParserRuleCall_4_0()); }
	ruleUseETD{ after(grammarAccess.getRTDAccess().getCoDomainUseETDParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RD__SourceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRDAccess().getSourceEDCrossReference_0_0()); }
(
{ before(grammarAccess.getRDAccess().getSourceEDIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getRDAccess().getSourceEDIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getRDAccess().getSourceEDCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RD__RelAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRDAccess().getRelRTDCrossReference_1_0()); }
(
{ before(grammarAccess.getRDAccess().getRelRTDIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getRDAccess().getRelRTDIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getRDAccess().getRelRTDCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RD__TargetAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRDAccess().getTargetEDCrossReference_2_0()); }
(
{ before(grammarAccess.getRDAccess().getTargetEDIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getRDAccess().getTargetEDIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getRDAccess().getTargetEDCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ED__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEDAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getEDAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ED__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEDAccess().getTypeUseETDParserRuleCall_2_0()); }
	ruleUseETD{ after(grammarAccess.getEDAccess().getTypeUseETDParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UseETDRef__RefAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUseETDRefAccess().getRefETDCrossReference_0()); }
(
{ before(grammarAccess.getUseETDRefAccess().getRefETDIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getUseETDRefAccess().getRefETDIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getUseETDRefAccess().getRefETDCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MegaLLinking__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegaLLinkingAccess().getNameQualifiedIDParserRuleCall_1_0()); }
	ruleQualifiedID{ after(grammarAccess.getMegaLLinkingAccess().getNameQualifiedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MegaLLinking__TargetAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegaLLinkingAccess().getTargetMegaLDefinitionCrossReference_2_1_0()); }
(
{ before(grammarAccess.getMegaLLinkingAccess().getTargetMegaLDefinitionQualifiedIDParserRuleCall_2_1_0_1()); }
	ruleQualifiedID{ after(grammarAccess.getMegaLLinkingAccess().getTargetMegaLDefinitionQualifiedIDParserRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getMegaLLinkingAccess().getTargetMegaLDefinitionCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MegaLLinking__LdsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegaLLinkingAccess().getLdsLDParserRuleCall_3_0()); }
	ruleLD{ after(grammarAccess.getMegaLLinkingAccess().getLdsLDParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LD__TargetAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLDAccess().getTargetEDCrossReference_0_0()); }
(
{ before(grammarAccess.getLDAccess().getTargetEDIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getLDAccess().getTargetEDIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getLDAccess().getTargetEDCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LD__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLDAccess().getValueSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getLDAccess().getValueSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


