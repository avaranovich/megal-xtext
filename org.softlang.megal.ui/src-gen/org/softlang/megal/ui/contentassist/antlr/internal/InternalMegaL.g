/*
* generated by Xtext
*/
grammar InternalMegaL;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.softlang.megal.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.softlang.megal.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.softlang.megal.services.MegaLGrammarAccess;

}

@parser::members {
 
 	private MegaLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(MegaLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleMegaL
entryRuleMegaL 
:
{ before(grammarAccess.getMegaLRule()); }
	 ruleMegaL
{ after(grammarAccess.getMegaLRule()); } 
	 EOF 
;

// Rule MegaL
ruleMegaL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMegaLAccess().getGroup()); }
(rule__MegaL__Group__0)
{ after(grammarAccess.getMegaLAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleETDR
entryRuleETDR 
:
{ before(grammarAccess.getETDRRule()); }
	 ruleETDR
{ after(grammarAccess.getETDRRule()); } 
	 EOF 
;

// Rule ETDR
ruleETDR
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getETDRAccess().getAlternatives()); }
(rule__ETDR__Alternatives)
{ after(grammarAccess.getETDRAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleETDEntity
entryRuleETDEntity 
:
{ before(grammarAccess.getETDEntityRule()); }
	 ruleETDEntity
{ after(grammarAccess.getETDEntityRule()); } 
	 EOF 
;

// Rule ETDEntity
ruleETDEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getETDEntityAccess().getGroup()); }
(rule__ETDEntity__Group__0)
{ after(grammarAccess.getETDEntityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleETDDeclared
entryRuleETDDeclared 
:
{ before(grammarAccess.getETDDeclaredRule()); }
	 ruleETDDeclared
{ after(grammarAccess.getETDDeclaredRule()); } 
	 EOF 
;

// Rule ETDDeclared
ruleETDDeclared
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getETDDeclaredAccess().getReferenceAssignment()); }
(rule__ETDDeclared__ReferenceAssignment)
{ after(grammarAccess.getETDDeclaredAccess().getReferenceAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleETD
entryRuleETD 
:
{ before(grammarAccess.getETDRule()); }
	 ruleETD
{ after(grammarAccess.getETDRule()); } 
	 EOF 
;

// Rule ETD
ruleETD
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getETDAccess().getGroup()); }
(rule__ETD__Group__0)
{ after(grammarAccess.getETDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRTD
entryRuleRTD 
:
{ before(grammarAccess.getRTDRule()); }
	 ruleRTD
{ after(grammarAccess.getRTDRule()); } 
	 EOF 
;

// Rule RTD
ruleRTD
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRTDAccess().getGroup()); }
(rule__RTD__Group__0)
{ after(grammarAccess.getRTDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleED
entryRuleED 
:
{ before(grammarAccess.getEDRule()); }
	 ruleED
{ after(grammarAccess.getEDRule()); } 
	 EOF 
;

// Rule ED
ruleED
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEDAccess().getGroup()); }
(rule__ED__Group__0)
{ after(grammarAccess.getEDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRD
entryRuleRD 
:
{ before(grammarAccess.getRDRule()); }
	 ruleRD
{ after(grammarAccess.getRDRule()); } 
	 EOF 
;

// Rule RD
ruleRD
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRDAccess().getGroup()); }
(rule__RD__Group__0)
{ after(grammarAccess.getRDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedID
entryRuleQualifiedID 
:
{ before(grammarAccess.getQualifiedIDRule()); }
	 ruleQualifiedID
{ after(grammarAccess.getQualifiedIDRule()); } 
	 EOF 
;

// Rule QualifiedID
ruleQualifiedID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedIDAccess().getGroup()); }
(rule__QualifiedID__Group__0)
{ after(grammarAccess.getQualifiedIDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__MegaL__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegaLAccess().getGroup_2_0()); }
(rule__MegaL__Group_2_0__0)
{ after(grammarAccess.getMegaLAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getMegaLAccess().getEtdAssignment_2_1()); }
(rule__MegaL__EtdAssignment_2_1)
{ after(grammarAccess.getMegaLAccess().getEtdAssignment_2_1()); }
)

    |(
{ before(grammarAccess.getMegaLAccess().getRtdAssignment_2_2()); }
(rule__MegaL__RtdAssignment_2_2)
{ after(grammarAccess.getMegaLAccess().getRtdAssignment_2_2()); }
)

    |(
{ before(grammarAccess.getMegaLAccess().getEdAssignment_2_3()); }
(rule__MegaL__EdAssignment_2_3)
{ after(grammarAccess.getMegaLAccess().getEdAssignment_2_3()); }
)

    |(
{ before(grammarAccess.getMegaLAccess().getRdAssignment_2_4()); }
(rule__MegaL__RdAssignment_2_4)
{ after(grammarAccess.getMegaLAccess().getRdAssignment_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ETDR__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getETDRAccess().getETDEntityParserRuleCall_0()); }
	ruleETDEntity
{ after(grammarAccess.getETDRAccess().getETDEntityParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getETDRAccess().getETDDeclaredParserRuleCall_1()); }
	ruleETDDeclared
{ after(grammarAccess.getETDRAccess().getETDDeclaredParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__MegaL__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MegaL__Group__0__Impl
	rule__MegaL__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MegaL__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegaLAccess().getModelKeyword_0()); }

	'model' 

{ after(grammarAccess.getMegaLAccess().getModelKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MegaL__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MegaL__Group__1__Impl
	rule__MegaL__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MegaL__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegaLAccess().getNameAssignment_1()); }
(rule__MegaL__NameAssignment_1)
{ after(grammarAccess.getMegaLAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MegaL__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MegaL__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MegaL__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegaLAccess().getAlternatives_2()); }
(rule__MegaL__Alternatives_2)*
{ after(grammarAccess.getMegaLAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MegaL__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MegaL__Group_2_0__0__Impl
	rule__MegaL__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MegaL__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegaLAccess().getImportKeyword_2_0_0()); }

	'import' 

{ after(grammarAccess.getMegaLAccess().getImportKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MegaL__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MegaL__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MegaL__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegaLAccess().getImportsAssignment_2_0_1()); }
(rule__MegaL__ImportsAssignment_2_0_1)
{ after(grammarAccess.getMegaLAccess().getImportsAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ETDEntity__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ETDEntity__Group__0__Impl
	rule__ETDEntity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ETDEntity__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getETDEntityAccess().getETDEntityAction_0()); }
(

)
{ after(grammarAccess.getETDEntityAccess().getETDEntityAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ETDEntity__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ETDEntity__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ETDEntity__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getETDEntityAccess().getEntityKeyword_1()); }

	'Entity' 

{ after(grammarAccess.getETDEntityAccess().getEntityKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ETD__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ETD__Group__0__Impl
	rule__ETD__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ETD__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getETDAccess().getNameAssignment_0()); }
(rule__ETD__NameAssignment_0)
{ after(grammarAccess.getETDAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ETD__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ETD__Group__1__Impl
	rule__ETD__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ETD__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getETDAccess().getLessThanSignKeyword_1()); }

	'<' 

{ after(grammarAccess.getETDAccess().getLessThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ETD__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ETD__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ETD__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getETDAccess().getSupertypeAssignment_2()); }
(rule__ETD__SupertypeAssignment_2)
{ after(grammarAccess.getETDAccess().getSupertypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RTD__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RTD__Group__0__Impl
	rule__RTD__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RTD__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRTDAccess().getNameAssignment_0()); }
(rule__RTD__NameAssignment_0)
{ after(grammarAccess.getRTDAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RTD__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RTD__Group__1__Impl
	rule__RTD__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RTD__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRTDAccess().getLessThanSignKeyword_1()); }

	'<' 

{ after(grammarAccess.getRTDAccess().getLessThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RTD__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RTD__Group__2__Impl
	rule__RTD__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RTD__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRTDAccess().getDomainAssignment_2()); }
(rule__RTD__DomainAssignment_2)
{ after(grammarAccess.getRTDAccess().getDomainAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RTD__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RTD__Group__3__Impl
	rule__RTD__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RTD__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRTDAccess().getAsteriskKeyword_3()); }

	'*' 

{ after(grammarAccess.getRTDAccess().getAsteriskKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RTD__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RTD__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RTD__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRTDAccess().getCoDomainAssignment_4()); }
(rule__RTD__CoDomainAssignment_4)
{ after(grammarAccess.getRTDAccess().getCoDomainAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ED__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ED__Group__0__Impl
	rule__ED__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ED__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEDAccess().getNameAssignment_0()); }
(rule__ED__NameAssignment_0)
{ after(grammarAccess.getEDAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ED__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ED__Group__1__Impl
	rule__ED__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ED__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEDAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getEDAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ED__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ED__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ED__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEDAccess().getTypeAssignment_2()); }
(rule__ED__TypeAssignment_2)
{ after(grammarAccess.getEDAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RD__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RD__Group__0__Impl
	rule__RD__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RD__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRDAccess().getSourceAssignment_0()); }
(rule__RD__SourceAssignment_0)
{ after(grammarAccess.getRDAccess().getSourceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RD__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RD__Group__1__Impl
	rule__RD__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RD__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRDAccess().getRelAssignment_1()); }
(rule__RD__RelAssignment_1)
{ after(grammarAccess.getRDAccess().getRelAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RD__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RD__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RD__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRDAccess().getTargetAssignment_2()); }
(rule__RD__TargetAssignment_2)
{ after(grammarAccess.getRDAccess().getTargetAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QualifiedID__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedID__Group__0__Impl
	rule__QualifiedID__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedID__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedIDAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedIDAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedID__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedID__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedID__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedIDAccess().getGroup_1()); }
(rule__QualifiedID__Group_1__0)*
{ after(grammarAccess.getQualifiedIDAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedID__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedID__Group_1__0__Impl
	rule__QualifiedID__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedID__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedIDAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedIDAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedID__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedID__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedID__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedIDAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedIDAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__MegaL__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegaLAccess().getNameQualifiedIDParserRuleCall_1_0()); }
	ruleQualifiedID{ after(grammarAccess.getMegaLAccess().getNameQualifiedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MegaL__ImportsAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegaLAccess().getImportsMegaLCrossReference_2_0_1_0()); }
(
{ before(grammarAccess.getMegaLAccess().getImportsMegaLIDTerminalRuleCall_2_0_1_0_1()); }
	RULE_ID{ after(grammarAccess.getMegaLAccess().getImportsMegaLIDTerminalRuleCall_2_0_1_0_1()); }
)
{ after(grammarAccess.getMegaLAccess().getImportsMegaLCrossReference_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MegaL__EtdAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegaLAccess().getEtdETDParserRuleCall_2_1_0()); }
	ruleETD{ after(grammarAccess.getMegaLAccess().getEtdETDParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MegaL__RtdAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegaLAccess().getRtdRTDParserRuleCall_2_2_0()); }
	ruleRTD{ after(grammarAccess.getMegaLAccess().getRtdRTDParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MegaL__EdAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegaLAccess().getEdEDParserRuleCall_2_3_0()); }
	ruleED{ after(grammarAccess.getMegaLAccess().getEdEDParserRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MegaL__RdAssignment_2_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMegaLAccess().getRdRDParserRuleCall_2_4_0()); }
	ruleRD{ after(grammarAccess.getMegaLAccess().getRdRDParserRuleCall_2_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ETDDeclared__ReferenceAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getETDDeclaredAccess().getReferenceETDCrossReference_0()); }
(
{ before(grammarAccess.getETDDeclaredAccess().getReferenceETDIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getETDDeclaredAccess().getReferenceETDIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getETDDeclaredAccess().getReferenceETDCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ETD__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getETDAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getETDAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ETD__SupertypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getETDAccess().getSupertypeETDRParserRuleCall_2_0()); }
	ruleETDR{ after(grammarAccess.getETDAccess().getSupertypeETDRParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RTD__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRTDAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getRTDAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RTD__DomainAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRTDAccess().getDomainETDRParserRuleCall_2_0()); }
	ruleETDR{ after(grammarAccess.getRTDAccess().getDomainETDRParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RTD__CoDomainAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRTDAccess().getCoDomainETDRParserRuleCall_4_0()); }
	ruleETDR{ after(grammarAccess.getRTDAccess().getCoDomainETDRParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ED__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEDAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getEDAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ED__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEDAccess().getTypeETDRParserRuleCall_2_0()); }
	ruleETDR{ after(grammarAccess.getEDAccess().getTypeETDRParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RD__SourceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRDAccess().getSourceEDCrossReference_0_0()); }
(
{ before(grammarAccess.getRDAccess().getSourceEDIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getRDAccess().getSourceEDIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getRDAccess().getSourceEDCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RD__RelAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRDAccess().getRelRTDCrossReference_1_0()); }
(
{ before(grammarAccess.getRDAccess().getRelRTDIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getRDAccess().getRelRTDIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getRDAccess().getRelRTDCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RD__TargetAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRDAccess().getTargetEDCrossReference_2_0()); }
(
{ before(grammarAccess.getRDAccess().getTargetEDIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getRDAccess().getTargetEDIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getRDAccess().getTargetEDCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


