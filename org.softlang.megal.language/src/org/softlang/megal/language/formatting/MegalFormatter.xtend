/*
 * generated by Xtext
 */
package org.softlang.megal.language.formatting

import com.google.inject.Inject
import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter
import org.eclipse.xtext.formatting.impl.FormattingConfig
import org.softlang.megal.language.services.MegalGrammarAccess

/**
 * This class contains custom formatting description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation.html#formatting
 * on how and when to use it 
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an example
 */
public class MegalFormatter extends AbstractDeclarativeFormatter {

	@Inject extension MegalGrammarAccess

	override protected configureFormatting(FormattingConfig c) {
		c.autoLinewrap = 120

		// Megamodel
		c.setLinewrap(0, 1, 2).before(megalFileAccess.importKeyword_3_0_0)
		c.setLinewrap(0, 1, 2).after(megalFileAccess.nameAssignment_2)
		c.setLinewrap(0, 1, 2).after(megalFileAccess.importsAssignment_3_0_1)

		// Prefix Annotation
		c.setLinewrap(0, 1, 2).around(prefixAnnotationRule)
		c.setNoSpace.after(prefixAnnotationAccess.commercialAtKeyword_0)
		c.setSpace(' ').between(prefixAnnotationAccess.keyAssignment_1, prefixAnnotationAccess.valueAssignment_2)

		// Show Name Annotation
		c.setNoSpace.after(showNameAnnotationAccess.leftSquareBracketKeyword_0)
		c.setNoSpace.before(showNameAnnotationAccess.rightSquareBracketKeyword_2)

		// Link
		c.setLinewrap(0, 1, 2).around(megalLinkRule)
		c.setNoSpace.around(megalLinkAccess.leftParenthesisKeyword_2_0)
		c.setNoSpace.before(megalLinkAccess.rightParenthesisKeyword_2_2)
		c.setSpace(' ').after(megalLinkAccess.rightParenthesisKeyword_2_2)
		c.setLinewrap(0, 0, 1).after(megalLinkAccess.rightParenthesisKeyword_2_2)
		c.setNoSpace.after(megalLinkAccess.verticalLineKeyword_2_3)
		c.setSpace(' ').before(megalLinkAccess.hyphenMinusGreaterThanSignKeyword_2_4)
		c.setSpace(' ').after(megalLinkAccess.hyphenMinusGreaterThanSignKeyword_2_4)
		c.setSpace(' ').before(megalLinkAccess.equalsSignKeyword_3)
		c.setSpace(' ').after(megalLinkAccess.equalsSignKeyword_3)

		// Entity Type
		c.setLinewrap(0, 1, 2).around(megalEntityTypeRule)
		c.setNoSpace.around(megalEntityTypeAccess.annotationsAssignment_2)
		c.setSpace(' ').before(megalEntityTypeAccess.lessThanSignKeyword_3_0_0)
		c.setSpace(' ').after(megalEntityTypeAccess.lessThanSignKeyword_3_0_0)

		// Relationship Type
		c.setLinewrap(0, 1, 2).around(megalRelationshipTypeRule)
		c.setNoSpace.around(megalRelationshipTypeAccess.annotationsAssignment_2)
		c.setSpace(' ').before(megalRelationshipTypeAccess.lessThanSignKeyword_3)
		c.setSpace(' ').after(megalRelationshipTypeAccess.lessThanSignKeyword_3)

		// Relationship Type instance
		c.setSpace(' ').before(megalRelationshipTypeAccess.asteriskKeyword_7)
		c.setSpace(' ').after(megalRelationshipTypeAccess.asteriskKeyword_7)

		// Entity
		c.setLinewrap(0, 1, 2).around(megalEntityRule)
		c.setNoSpace.after(megalEntityAccess.dependentAssignment_1_0)
		c.setNoSpace.after(megalEntityAccess.parameterAssignment_1_1)
		c.setNoSpace.after(megalEntityAccess.annotationsAssignment_3)
		c.setNoSpace.before(megalEntityAccess.colonKeyword_4)
		c.setSpace(' ').after(megalEntityAccess.colonKeyword_4)

		// Relationship
		c.setLinewrap(0, 1, 2).around(megalRelationshipRule)
		c.setSpace(' ').before(megalRelationshipAccess.typeAssignment_2)
		c.setSpace(' ').after(megalRelationshipAccess.typeAssignment_2)

		// FunctionApplication
		c.setLinewrap(0, 1, 2).around(megalFunctionApplicationRule)
		c.setNoSpace.around(megalFunctionApplicationAccess.leftParenthesisKeyword_2)
		c.setNoSpace.before(megalFunctionApplicationAccess.rightParenthesisKeyword_4)
		c.setSpace(' ').after(megalFunctionApplicationAccess.rightParenthesisKeyword_4)
		c.setLinewrap(0, 0, 1).after(megalFunctionApplicationAccess.rightParenthesisKeyword_4)
		c.setNoSpace.after(megalFunctionApplicationAccess.verticalLineKeyword_5)
		c.setSpace(' ').before(megalFunctionApplicationAccess.hyphenMinusGreaterThanSignKeyword_6)
		c.setSpace(' ').after(megalFunctionApplicationAccess.hyphenMinusGreaterThanSignKeyword_6)

		// Formatting for Comments 
		c.setLinewrap(0, 1, 2).before(SL_COMMENTRule)
		c.setLinewrap(0, 1, 2).before(ML_COMMENTRule)
		c.setLinewrap(0, 1, 1).after(ML_COMMENTRule)
	}
}
