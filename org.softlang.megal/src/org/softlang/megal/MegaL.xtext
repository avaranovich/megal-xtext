grammar org.softlang.megal.MegaL hidden(ML_COMMENT, SL_COMMENT, WS)

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://www.softlang.org/megal/PP" as pp
generate megaL "http://www.softlang.org/megal/MegaL"

Model:
	MegaLDefinition | MegaLLinking;

MegaLDefinition:
	'model' name=QualifiedID
	('configured' 'in' linker=[MegaLLinking|QualifiedID])?
	(imports+=Import | etds+=ETD | rtds+=RTD | eds+=ED | rds+=RD | fas+=FA)*;

Import:
	'import' ref=[MegaLDefinition];

NamedDefinition:
	ETD | RTD | ED;

Annotation:
	'@' key=ID '(' value=STRING ')';

ETD:
	annotations+=Annotation* name=QualifiedID '<' supertype=UseETD;

RTD:
	annotations+=Annotation* name=QualifiedID '<' domain=UseETD '*' coDomain=UseETD;

RD:
	source=[ED|QualifiedID] rel=[RTD|QualifiedID] target=[ED|QualifiedID];

ED:
	modifiers=Modifiers? name=QualifiedID ':' type=UseETD ('[' genericLeft=[ED|QualifiedID] '->'
	genericRight=[ED|QualifiedID] ']')?;

FA:
	name=ID '(' source=[ED|QualifiedID] ')' '|' '->' target=[ED|QualifiedID];

UseETD:
	UseETDRef | UseEntity;

UseETDRef:
	ref=[ETD|QualifiedID] cardinality=Cardinality?;

UseEntity:
	{UseEntity} 'Entity' cardinality=Cardinality?;

MegaLLinking:
	'configuration' name=QualifiedID
	('for' target=[MegaLDefinition|QualifiedID])?
	(jars+=Jar | projects+=Project | providers+=Provider | semantics+=Semantic | lds+=LD)*;

Project:
	'project' ref=STRING;

Jar:
	'jar' ref=STRING;

Provider:
	'provider' classifier=[pp::Classifier|QualifiedID];

Semantic:
	'semantic' classifier=[pp::Classifier|QualifiedID];

LD:
	target=[ED|QualifiedID] '=' value=STRING;

enum Modifiers:
	Extern='extern' |
	Intern='intern' |
	Parameter='?' |
	Dependent='!';

enum Cardinality:
	Plus='+' | Star='*';

QualifiedID:
	ID ('.' ID)*;

terminal ID:
	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;

terminal STRING:
	'"' ('\\' ('b' | 't' | 'n' | 'f' | 'r' | 'u' | '"' | "'" | '\\') | !('\\' | '"'))* '"';

terminal ML_COMMENT:
	'/*'->'*/';

terminal SL_COMMENT:
	'//' !('\n' | '\r')* ('\r'? '\n')?;

terminal WS:
	(' ' | '\t' | '\r' | '\n')+;

terminal ANY_OTHER:
	.;